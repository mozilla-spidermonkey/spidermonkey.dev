%%{init: {"flowchart": {"defaultRenderer": "elk"}} }%%
%% Use the elk renderer: Much better for this diagram.
%% -- However, using elk as our renderer does have downsides. Elk doesn't
%%    support dotted lines.
flowchart LR

    subgraph Legend
        Done
        GC["GC/CC"]
        JIT

        class Done done
        class GC GC
        class JIT JIT

        perf[/"A performance item"/]
    end

    root[SpiderMonkey Tech Tree] --> shapeIndexes[Shape Indexes]
    shapeIndexes --> taggedShapeIndexes[Tagged Shape Indexes]
    root --> inMemoryJITHints[/"In Memory JIT Hints"/] --> onDiskJITHints[/"On  Disk JIT Hints"/] --> ric[/"Reusable Inline Caches"/]

    %% Mark In Memory JIT hints as done -- CSS class is in index.html
    class inMemoryJITHints done;
    class onDiskJITHints JIT;
    class ric JIT;

    root --> webIDL["WebIDL For SpiderMonkey"] --> ecmaIDL["ECMA-IDL (an IDL for ECMAScript)"]
    root --> scheduling["Thread Scheduling and Integration"] --> offThreadDelazification[/"Off-Thread Delazification"/]
    root --> offThreadDelazification
    root --> nonGCScopes["Convert Scopes from GC to non-GC things"] --> universalRelazification["Universal Relazification"]
    universalRelazification --> tossBytecode["Regenerate Bytecode For Correctness"]
    root --> tossBytecode --> optimizedBytecode["Optimized Bytecode Emission"]
    root --> immutableFlag["Immutable Object Detection at Parse Time"] --> optimizedImmutableLookups[/"Optimized Immutable Lookups"/]
    root --> evalCache["Redoing the Eval Cache"] --> precompiledEval[/"Precompiled Evals"/]
    root --> pointerCompression["Pointer Compression"] --> compressedDOM["Compressed DOM Heap"]
    class pointerCompression GC
    class compressedDOM GC

    root --> cc["Cycle Collection in SpiderMonkey"] --> refCount["RefCountable Objects in SpiderMonkey"]
    class cc GC
    class refCount GC

    cc --> smHeap["SpiderMonkey Owns the Firefox Heap"] --> compressedDOM
    class smHeap GC

    root --> inBinaryStubs[/"In-Binary CacheIR Stubs"/]
    root --> smRelocations["SpiderMonkey Relocations"]
    frozenRuntime[/"In Binary Frozen Runtime"/]
    frozenRuntime --> bakedFirefox[/"'Instant Startup' Firefox Binaries"/]

    smRelocations -.-> inBinaryStubs --> frozenRuntime
    smRelocations --> inBinaryTrampolines[/"In-Binary Trampolines"/] --> frozenRuntime
    smRelocations --> inBinaryBaseline[/"In-Binary Baseline Interpreter"/] --> frozenRuntime

    root --> inBinaryCode["Embed Generated Code in Binary"] --> inBinaryStubs & inBinaryTrampolines & inBinaryBaseline

    root --> stencilNav[/"In-Memory Stencil Caching (stencil-nav)"/]
    stencilNav --> onDiskStencil[/"On-Disk Stencil Caches"/]
    root --> contextFreeParsing["JSContext Free Parsing"]
    stencilNav --> contextFreeParsing
    contextFreeParsing --> streamingParsing[/"Streaming Parsing"/]
    streamingParsing --> networkParsing[/"Incremental Parsing of Network Chunks"/]



    subgraph improvedBytecode [Bytecode Improvements]
        destructuringBytecode[/"Better Bytecode for Destructuring"/]
        generatorBytecodeTransforms[/"Easier to optimize generator bytecode"/]
    end
    root --> improvedBytecode


    generatorBytecodeTransforms -.-> resumeInWarp

    subgraph ionImprovements [Ion Improvements]
        shareIonICs[/"Share Ion ICs"/]
        prepopulateIonIcs[/"Pre-populate Ion ICs offthread"/]
        fastIonTier[/"A Fast Ion Tier"/]

        resumeInWarp[/"Resume In Warp"/]

        class shareIonICs JIT
        class prepopulateIonIcs JIT
        class fastIonTier JIT
        class resumeInWarp JIT
    end
    root --> ionImprovements

    %% Click Handlers
    %% Example of a programatic click handler for giggles. Notice that the callback
    %% is accessed relative to `window`.
    %% click webIDL callbacks.exampleCallback

    %% As an example of how we could group projects together.
    %% Commented out for now.
    %% subgraph "Gecko Managed Runtime"
    %%     cc
    %%     smHeap
    %%     webIDL
    %%     ecmaIDL
    %% end

    %% Detail links
    click shapeIndexes href "#shapeIndexes"
    click taggedShapeIndexes href "#taggedShapeIndexes"
    click universalRelazification href "#universalRelazification"
    click tossBytecode href "#tossBytecode"
    click immutableFlag href "#immutableFlag"

    click ric href "#ric"
    click smRelocations href "#smRelocations"
    click inMemoryJITHints href "https://bugzilla.mozilla.org/show_bug.cgi?id=1824772"

    click streamingParsing "#streamingParsing"
    click inBinaryCode "#inBinaryCode"

    click shareIonICs "#shareIonICs"
    click prepopulateIonIcs "#prepopulateIonIcs"
    click fastIonTier "#fastIonTier"

    click destructuringBytecode "#destructuringBytecode"
    click generatorBytecodeTransforms "#generatorBytecodeTransforms"

    click resumeInWarp href "https://bugzilla.mozilla.org/show_bug.cgi?id=1681338"
